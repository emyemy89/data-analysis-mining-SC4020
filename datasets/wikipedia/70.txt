<title>Computer science</title><text><div class="thumb tright"> <div class="thumbinner" style="width:300px;"> {| style="border:1px solid #ccc;" |- | [[File:Lambda lc.svg|144px|alt=large capital lambda|Programming language theory|link=Programming language theory]] | [[File:Sorting quicksort anim frame.svg|144px|alt=Plot of a quicksort algorithm|Computational complexity theory|link=Computational complexity theory]] |- | [[File:Activemarker2.PNG|144px|alt=Example of Computer animation produced using Motion capture|Computer graphics|link=Computer graphics (computer science)]] | [[File:ABasicComputer.gif|144px|alt=Basic computer architecture|Humancomputer interaction|link=Computer architecture]] |} <div class="thumbcaption"> Computer science deals with the theoretical foundations of computation and practical techniques for their application.</div> </div> </div> '''Computer science''' is the study of manipulating, managing, transforming and [[code|encoding]] [[information]].  There are many different areas in [[computer]] [[science]]. Some areas consider problems in an [[Abstraction|abstract]] manner, while some need special [[machine]]s, called [[computer]]s.  A person who works with computers will often need [[mathematics]], [[science]], and [[logic]] in order to design and work with computers.  == Common tasks for a computer scientist == === Asking questions === This is so people can find new and easier ways to do things, and the way to approach problems with this information.  While computers can do some things easily (like simple math, or sorting out a list of names from A-to-Z), computers cannot answer questions when there is not enough information, or when there is no real answer. Also, computers may take too much time to finish long [[wikt:task|tasks]]. For example, it may take too long to find the shortest way through all of the towns in the USA - so instead a computer will try to make a [[heuristic|close guess]]. A computer will answer these simpler questions much faster.  === Answering the question === [[Algorithm]]s are a specific set of instructions or steps on how to complete a task. For example, a computer scientist wants to sort [[playing cards]]. There are many ways to sort them - by suits (diamonds, clubs, hearts, and spades) or by numbers (2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen, King, and Ace).  By deciding on a set of steps to sort the cards, the scientist has created an algorithm. The scientist then needs to test whether this algorithm works. This shows how well and how fast the algorithm sorts cards.  A simple but slow algorithm is: pick up two cards and check whether they are sorted correctly. If they are not, reverse them. Then do it again with another two, and repeat them all until they are all sorted. This "bubble sort" method will work, but it will take a very long time.   A better algorithm is: find the first card with the smallest suit and smallest number (2 of diamonds), and place it at the start. After this, look for the second card, and so on. This algorithm is much faster, and does not need much space. This algorithm is a "selection sort".  [[Ada Lovelace]] wrote the first computer algorithm in 1843, for a computer that was never finished. Computers began during [[World War II]].<ref>{{Cite news|url=https://www.worldsciencefestival.com/infographics/a_history_of_computer_science/|title=A Brief History of Computer Science {{!}} World Science Festival|work=World Science Festival|access-date=2018-03-20|language=en-US}}</ref> Computer science separated from the other sciences during the 1960s and 1970s. Now, computer science has its own methods, and has its own technical terms. It is related to [[electrical engineering]], [[mathematics]], and [[language science]].  Computer science looks at the [[theory|theoretical]] parts of computers. [[Computer engineering]] looks at the physical [[computer hardware|parts]] of computers (hardware). [[Software engineering]] looks at the use of [[software|computer programs]] and how to make them.  == Parts of computer science == === Central math === * [[Boolean algebra]] (when something can only be true or false) * [[Computer numbering formats]] (how computers count) * [[Discrete mathematics]] (math with numbers a person can count) * [[Symbolic logic]] (clear ways of talking about math) *[[Order of operations]] (which [[Operation (mathematics)|math operations]] are performed first)  === How an ideal computer works === * [[Algorithmic information theory]] (how easily can a computer answer a question?) * [[computational complexity theory|Complexity theory]] (how much [[time]] and memory does a computer need to answer a question?) * [[Computability theory]] (can a computer do something?) * [[Information theory]] (math that looks at [[information|data]] and how to process data) * [[Computation|Theory of computation]] (how to answer questions on a computer using algorithms) * [[Graph theory]] (math that looks for directions from one point to another) * [[Type theory]] (what kinds of data should computers work with?) * [[Denotational semantics]] (math for [[computer languages]]) * [[Algorithm]]s (looks at how to answer a question) * [[Compiler]]s (turning words into computer programs) * [[Lexical analysis]] (how to turn words into data) * [[Microprogram]]ming (how to control the most important part of a computer) * [[Operating system]]s (big computer programs, e.g. [[Linux]], [[Microsoft Windows]], [[Mac OS]])  to control the computer hardware and software. * [[Cryptography]] (hiding data) * [[Parallel computing]] (many instructions are carried out simultaneously)  === Computer science at work === * [[Artificial intelligence]] (making computers learn and talk, similar to people) * [[Computer algebra]] (using computers for [[Mathematics|Mathematical problems]]) * [[Computer architecture]] (building a computer) * [[Computer graphics]] (making pictures with computers) * [[Computer network]]s (joining computers to other computers) * [[Computer program]] (how to tell a computer to do something) * [[Computer programming]] (writing, or making, computer programs) * [[Computer security]] (making computers and their data safe) * [[Database]]s (a way to sort and keep data) * [[Data structure]] (how to build or group data) * [[Distributed computing]] (using more than one computer to solve a difficult problem) * [[Information retrieval]] (getting data back from a computer) * [[Programming language]]s ([[language]]s that a [[programmer]] uses to make computer programs) * [[Program specification]] (what a program is supposed to do) * [[Program verification]] (making sure a computer program does what it should do, see [[debugging]]) * [[Robot]]s (using computers to control machines) * [[Software engineering]] (how [[programmer]]s write programs)  === What computer science does === * [[Benchmark]] (testing a computer's power or speed) * [[Computer vision]] (how computers can see and understand images) * [[Collision detection]] (how computers help robots move without hitting something) * [[Data compression]] (making data smaller) * [[Data structure]]s (how computers group and sort data) * [[Data acquisition]] (putting data into computers) * [[Design pattern]]s (answers to common [[software engineering]] problems) * [[Digital signal processing]] (cleaning and "looking" at data) * [[File format]]s (how a [[Computer file|file]] is arranged) * [[Human-computer interaction]] (how humans use computers) * [[Information security]] (keeping data safe from other people) * [[Internet]] (a large [[network]] that joins almost all computers) * [[Web application]]s (computer programs on the Internet) * [[Software optimization|Optimization]] (making [[software|computer programs]] work better) * [[Software metric]]s (ways to measure computer programs, such as counting lines of code or number of operations) * [[Very large system integration|VLSI design]] (the making of a very large and complex computer system)  ==Related pages== * [[Computing]] * [[Turing Award]] * [[Computer jargon]] * [[List of words about computers|Encyclopedia of Computer Terms]]  ==References== {{Sister project links| wikt=computer science|c=Category:Computer science | b=Computer science | q=Computer science|n=no|s=no| v=Computer science | voy=no | species=no | d=no}}  {{reflist}} {{authority control}} [[Category:Computer science| ]]</text>